{"version":3,"file":"translit-ed.js","sources":["../src/plain/invert.js","../src/plain/CyrillicToLatinUnsafe.js","../src/jarolit/cyrillicToLatin.js","../src/quick/cyrillicToLatin.js","../src/jarolit/latinToCyrillic.js","../src/index.mjs"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\nconst argsTag = \"[object Arguments]\";\nconst funcTag = \"[object Function]\";\nconst genTag = \"[object GeneratorFunction]\";\nconst reIsUint = /^(?:0|[1-9]\\d*)$/;\nfunction baseTimes(n, iteratee) {\n  let index = -1;\n  let result = Array(n);\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\nconst objectProto = Object.prototype;\nconst hasOwnProperty = objectProto.hasOwnProperty;\nconst objectToString = objectProto.toString;\nconst propertyIsEnumerable = objectProto.propertyIsEnumerable;\nconst nativeKeys = overArg(Object.keys, Object);\nfunction arrayLikeKeys(value, inherited) {\n  let result = isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];\n  let length = result.length,\n    skipIndexes = !!length;\n  for (let key in value) {\n    if (\n      (inherited || hasOwnProperty.call(value, key)) &&\n      !(skipIndexes && (key === \"length\" || isIndex(key, length)))\n    ) {\n      result.push(key);\n    }\n  }\n  return result;\n}\nconst baseFor = createBaseFor();\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\nfunction baseInverter(object, setter, iteratee, accumulator) {\n  baseForOwn(object, function (value, key, object) {\n    setter(accumulator, iteratee(value), key, object);\n  });\n  return accumulator;\n}\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  const result = [];\n  for (let key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key !== \"constructor\") {\n      result.push(key);\n    }\n  }\n  return result;\n}\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    let index = -1,\n      iterable = Object(object),\n      props = keysFunc(object),\n      length = props.length;\n\n    while (length--) {\n      let key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\nfunction createInverter(setter, toIteratee) {\n  return function (object, iteratee) {\n    return baseInverter(object, setter, toIteratee(iteratee), {});\n  };\n}\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return (\n    !!length && (typeof value == \"number\" || reIsUint.test(value)) && value > -1 && value % 1 === 0 && value < length\n  );\n}\nfunction isPrototype(value) {\n  let Ctor = value && value.constructor,\n    proto = (typeof Ctor == \"function\" && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\nfunction isArguments(value) {\n  return (\n    isArrayLikeObject(value) &&\n    hasOwnProperty.call(value, \"callee\") &&\n    (!propertyIsEnumerable.call(value, \"callee\") || objectToString.call(value) === argsTag)\n  );\n}\nconst isArray = Array.isArray;\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\nfunction isFunction(value) {\n  const tag = isObject(value) ? objectToString.call(value) : \"\";\n  return tag === funcTag || tag === genTag;\n}\nfunction isLength(value) {\n  return typeof value == \"number\" && value > -1 && value % 1 === 0 && value <= MAX_SAFE_INTEGER;\n}\nfunction isObject(value) {\n  const type = typeof value;\n  return !!value && (type === \"object\" || type === \"function\");\n}\nfunction isObjectLike(value) {\n  return !!value && typeof value == \"object\";\n}\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\nfunction constant(value) {\n  return function () {\n    return value;\n  };\n}\nfunction identity(value) {\n  return value;\n}\nexport const invert = createInverter(function (result, value, key) {\n  result[value] = key;\n}, constant(identity));\n","// Original code:\n// https://github.com/greybax/cyrillic-to-translit-js\n\nimport { invert } from \"./invert.js\";\n\nexport function CyrillicToLatinUnsafe(config) {\n  const _preset = config ? config.preset : \"ru\";\n  const _firstLetters = {\n    а: \"a\",\n    б: \"b\",\n    в: \"v\",\n    д: \"d\",\n    з: \"z\",\n    й: \"y\",\n    к: \"k\",\n    л: \"l\",\n    м: \"m\",\n    н: \"n\",\n    о: \"o\",\n    п: \"p\",\n    р: \"r\",\n    с: \"s\",\n    т: \"t\",\n    у: \"u\",\n    ф: \"f\",\n    ь: \"\",\n  };\n  if (_preset === \"ru\") {\n    Object.assign(_firstLetters, {\n      г: \"g\",\n      и: \"i\",\n      ъ: \"\",\n      ы: \"i\",\n      э: \"e\",\n    });\n  } else if (_preset === \"uk\") {\n    Object.assign(_firstLetters, {\n      \"г\": \"h\",\n      \"ґ\": \"g\",\n      \"е\": \"e\",\n      \"и\": \"y\",\n      \"і\": \"i\",\n      \"'\": \"\",\n      \"’\": \"\",\n      \"ʼ\": \"\",\n    });\n  }\n  let _reversedFirstLetters;\n  if (_preset === \"ru\") {\n    _reversedFirstLetters = Object.assign(invert(_firstLetters), {\n      \"i\": \"и\",\n      \"\": \"\",\n    });\n  } else if (_preset === \"uk\") {\n    _reversedFirstLetters = Object.assign(invert(_firstLetters), { \"\": \"\" });\n  }\n  const _initialDigraphs = _preset === \"ru\" ? { е: \"ye\" } : { є: \"ye\", ї: \"yi\" };\n  const _regularDigraphs = {\n    ё: \"yo\",\n    ж: \"zh\",\n    х: \"kh\",\n    ц: \"ts\",\n    ч: \"ch\",\n    ш: \"sh\",\n    щ: \"shch\",\n    ю: \"yu\",\n    я: \"ya\",\n  };\n  const _firstDigraphs = Object.assign({}, _regularDigraphs, _initialDigraphs);\n  const _reversedFirstDigraphs = Object.assign(invert(_firstDigraphs));\n  const _firstAssociations = Object.assign(_firstLetters, _firstDigraphs);\n  const _nonFirstLetters = Object.assign({}, _firstLetters, { й: \"i\" });\n  if (_preset === \"ru\") {\n    Object.assign(_nonFirstLetters, { е: \"e\" });\n  } else if (_preset === \"uk\") {\n    Object.assign(_nonFirstLetters, { ї: \"i\" });\n  }\n  let _reversedNonFirstLetters;\n  if (_preset === \"ru\") {\n    // Russian: i > always и, y > ы in non-initial position, e > е in non-initial position\n    _reversedNonFirstLetters = Object.assign(invert(_firstLetters), {\n      \"i\": \"и\",\n      \"y\": \"ы\",\n      \"e\": \"е\",\n      \"\": \"\",\n    });\n  } else if (_preset === \"uk\") {\n    _reversedNonFirstLetters = Object.assign(invert(_firstLetters), { \"\": \"\" });\n  }\n  let _nonInitialDigraphs = {};\n  if (_preset === \"uk\") {\n    _nonInitialDigraphs = {\n      є: \"ie\",\n      ю: \"iu\",\n      я: \"ia\",\n    };\n  }\n  const _nonFirstDigraphs = Object.assign(_regularDigraphs, _nonInitialDigraphs);\n  const _reversedNonFirstDigraphs = Object.assign(invert(_nonFirstDigraphs));\n  const _nonFirstAssociations = Object.assign(_nonFirstLetters, _nonFirstDigraphs);\n  function transform(input, spaceReplacement) {\n    if (!input) {\n      return \"\";\n    }\n    const normalizedInput = input.normalize();\n    let newStr = \"\";\n    let isWordBoundary = false;\n    for (let i = 0; i < normalizedInput.length; i++) {\n      const isUpperCaseOrWhatever = normalizedInput[i] === normalizedInput[i].toUpperCase();\n      let strLowerCase = normalizedInput[i].toLowerCase();\n      if (strLowerCase === \" \") {\n        newStr += spaceReplacement ? spaceReplacement : \" \";\n        isWordBoundary = true;\n        continue;\n      }\n      let newLetter;\n      if (_preset === \"uk\" && normalizedInput.slice(i - 1, i + 1).toLowerCase() === \"зг\") {\n        newLetter = \"gh\";\n      } else if (i === 0 || isWordBoundary) {\n        newLetter = _firstAssociations[strLowerCase];\n        isWordBoundary = false;\n      } else {\n        newLetter = _nonFirstAssociations[strLowerCase];\n      }\n      if (\"undefined\" === typeof newLetter) {\n        newStr += isUpperCaseOrWhatever ? strLowerCase.toUpperCase() : strLowerCase;\n      } else if (isUpperCaseOrWhatever) {\n        newLetter.length > 1\n          ? (newStr += newLetter[0].toUpperCase() + newLetter.slice(1))\n          : (newStr += newLetter.toUpperCase());\n      } else {\n        newStr += newLetter;\n      }\n    }\n    return newStr;\n  }\n  function reverse(input, spaceReplacement) {\n    if (!input) {\n      return \"\";\n    }\n    const normalizedInput = input.normalize();\n    let newStr = \"\";\n    let isWordBoundary = false;\n    let index = 0;\n    while (index < normalizedInput.length) {\n      const isUpperCaseOrWhatever = normalizedInput[index] === normalizedInput[index].toUpperCase();\n      let strLowerCase = normalizedInput[index].toLowerCase();\n      let currentIndex = index;\n      if (strLowerCase === \" \" || strLowerCase === spaceReplacement) {\n        newStr += \" \";\n        isWordBoundary = true;\n        index++;\n        continue;\n      }\n      let newLetter;\n      let digraph = normalizedInput.slice(index, index + 2).toLowerCase();\n      if (index === 0 || isWordBoundary) {\n        newLetter = _reversedFirstDigraphs[digraph];\n        if (newLetter) {\n          index += 2;\n        } else {\n          newLetter = _reversedFirstLetters[strLowerCase];\n          index++;\n        }\n        isWordBoundary = false;\n      } else {\n        newLetter = _reversedNonFirstDigraphs[digraph];\n        if (newLetter) {\n          index += 2;\n        } else {\n          newLetter = _reversedNonFirstLetters[strLowerCase];\n          index++;\n        }\n      }\n      if (normalizedInput.slice(currentIndex, currentIndex + 4).toLowerCase() === \"shch\") {\n        newLetter = \"щ\";\n        index = currentIndex + 4;\n      } else if (normalizedInput.slice(currentIndex - 1, currentIndex + 2).toLowerCase() === \"zgh\") {\n        newLetter = \"г\";\n        index = currentIndex + 2;\n      }\n\n      if (typeof newLetter === \"undefined\") {\n        newStr += isUpperCaseOrWhatever ? strLowerCase.toUpperCase() : strLowerCase;\n      } else {\n        if (isUpperCaseOrWhatever) {\n          newLetter.length > 1\n            ? (newStr += newLetter[0].toUpperCase() + newLetter.slice(1))\n            : (newStr += newLetter.toUpperCase());\n        } else {\n          newStr += newLetter;\n        }\n      }\n    }\n\n    return newStr;\n  }\n\n  return {\n    transform: transform,\n    reverse: reverse,\n  };\n}\n","// Original code:\n// https://программирование-по-русски.рф/яролит.яргт/\n// https://bitbucket.org/budden/ppr/src/master/static/jarolit/яролит.js\n\nexport function cyrillicToLatin(cyrText) {\n  function cyrillicLetterToLatin(letter, currLang) {\n    function replaceLetter(languageCodeConvertTo, textToTransform) {\n      if (currLang === \"r\" && languageCodeConvertTo === \"e\") {\n        currLang = \"e\";\n        return \"xe\" + textToTransform;\n      } else if (currLang === \"e\" && languageCodeConvertTo === \"r\") {\n        currLang = \"r\";\n        return \"xr\" + textToTransform;\n      } else {\n        return textToTransform;\n      }\n    }\n    switch (letter) {\n      case \"а\":\n        return replaceLetter(\"r\", \"a\");\n      case \"б\":\n        return replaceLetter(\"r\", \"b\");\n      case \"в\":\n        return replaceLetter(\"r\", \"v\");\n      case \"г\":\n        return replaceLetter(\"r\", \"g\");\n      case \"д\":\n        return replaceLetter(\"r\", \"d\");\n      case \"е\":\n        return replaceLetter(\"r\", \"e\");\n      case \"ё\":\n        return replaceLetter(\"r\", \"jo\");\n      case \"ж\":\n        return replaceLetter(\"r\", \"zh\");\n      case \"з\":\n        return replaceLetter(\"r\", \"z\");\n      case \"и\":\n        return replaceLetter(\"r\", \"i\");\n      case \"й\":\n        return replaceLetter(\"r\", \"jj\");\n      case \"к\":\n        return replaceLetter(\"r\", \"k\");\n      case \"л\":\n        return replaceLetter(\"r\", \"l\");\n      case \"м\":\n        return replaceLetter(\"r\", \"m\");\n      case \"н\":\n        return replaceLetter(\"r\", \"n\");\n      case \"о\":\n        return replaceLetter(\"r\", \"o\");\n      case \"п\":\n        return replaceLetter(\"r\", \"p\");\n      case \"р\":\n        return replaceLetter(\"r\", \"r\");\n      case \"с\":\n        return replaceLetter(\"r\", \"s\");\n      case \"т\":\n        return replaceLetter(\"r\", \"t\");\n      case \"у\":\n        return replaceLetter(\"r\", \"u\");\n      case \"ф\":\n        return replaceLetter(\"r\", \"f\");\n      case \"х\":\n        return replaceLetter(\"r\", \"kh\");\n      case \"ц\":\n        return replaceLetter(\"r\", \"c\");\n      case \"ч\":\n        return replaceLetter(\"r\", \"ch\");\n      case \"ш\":\n        return replaceLetter(\"r\", \"sh\");\n      case \"щ\":\n        return replaceLetter(\"r\", \"shh\");\n      case \"ъ\":\n        return replaceLetter(\"r\", \"jq\");\n      case \"ы\":\n        return replaceLetter(\"r\", \"y\");\n      case \"ь\":\n        return replaceLetter(\"r\", \"q\");\n      case \"э\":\n        return replaceLetter(\"r\", \"eh\");\n      case \"ю\":\n        return replaceLetter(\"r\", \"ju\");\n      case \"я\":\n        return replaceLetter(\"r\", \"ja\");\n      case \"А\":\n        return replaceLetter(\"r\", \"A\");\n      case \"Б\":\n        return replaceLetter(\"r\", \"B\");\n      case \"В\":\n        return replaceLetter(\"r\", \"V\");\n      case \"Г\":\n        return replaceLetter(\"r\", \"G\");\n      case \"Д\":\n        return replaceLetter(\"r\", \"D\");\n      case \"Е\":\n        return replaceLetter(\"r\", \"E\");\n      case \"Ё\":\n        return replaceLetter(\"r\", \"JO\");\n      case \"Ж\":\n        return replaceLetter(\"r\", \"ZH\");\n      case \"З\":\n        return replaceLetter(\"r\", \"Z\");\n      case \"И\":\n        return replaceLetter(\"r\", \"I\");\n      case \"Й\":\n        return replaceLetter(\"r\", \"JJ\");\n      case \"К\":\n        return replaceLetter(\"r\", \"K\");\n      case \"Л\":\n        return replaceLetter(\"r\", \"L\");\n      case \"М\":\n        return replaceLetter(\"r\", \"M\");\n      case \"Н\":\n        return replaceLetter(\"r\", \"N\");\n      case \"О\":\n        return replaceLetter(\"r\", \"O\");\n      case \"П\":\n        return replaceLetter(\"r\", \"P\");\n      case \"Р\":\n        return replaceLetter(\"r\", \"R\");\n      case \"С\":\n        return replaceLetter(\"r\", \"S\");\n      case \"Т\":\n        return replaceLetter(\"r\", \"T\");\n      case \"У\":\n        return replaceLetter(\"r\", \"U\");\n      case \"Ф\":\n        return replaceLetter(\"r\", \"F\");\n      case \"Х\":\n        return replaceLetter(\"r\", \"KH\");\n      case \"Ц\":\n        return replaceLetter(\"r\", \"C\");\n      case \"Ч\":\n        return replaceLetter(\"r\", \"CH\");\n      case \"Ш\":\n        return replaceLetter(\"r\", \"SH\");\n      case \"Щ\":\n        return replaceLetter(\"r\", \"SHH\");\n      case \"Ъ\":\n        return replaceLetter(\"r\", \"JQ\");\n      case \"Ы\":\n        return replaceLetter(\"r\", \"Y\");\n      case \"Ь\":\n        return replaceLetter(\"r\", \"Q\");\n      case \"Э\":\n        return replaceLetter(\"r\", \"EH\");\n      case \"Ю\":\n        return replaceLetter(\"r\", \"JU\");\n      case \"Я\":\n        return replaceLetter(\"r\", \"JA\");\n      case \"a\":\n        return replaceLetter(\"e\", \"a\");\n      case \"b\":\n        return replaceLetter(\"e\", \"b\");\n      case \"c\":\n        return replaceLetter(\"e\", \"c\");\n      case \"d\":\n        return replaceLetter(\"e\", \"d\");\n      case \"e\":\n        return replaceLetter(\"e\", \"e\");\n      case \"f\":\n        return replaceLetter(\"e\", \"f\");\n      case \"g\":\n        return replaceLetter(\"e\", \"g\");\n      case \"h\":\n        return replaceLetter(\"e\", \"h\");\n      case \"i\":\n        return replaceLetter(\"e\", \"i\");\n      case \"j\":\n        return replaceLetter(\"e\", \"jj\");\n      case \"k\":\n        return replaceLetter(\"e\", \"k\");\n      case \"l\":\n        return replaceLetter(\"e\", \"l\");\n      case \"m\":\n        return replaceLetter(\"e\", \"m\");\n      case \"n\":\n        return replaceLetter(\"e\", \"n\");\n      case \"o\":\n        return replaceLetter(\"e\", \"o\");\n      case \"p\":\n        return replaceLetter(\"e\", \"p\");\n      case \"q\":\n        return replaceLetter(\"e\", \"q\");\n      case \"r\":\n        return replaceLetter(\"e\", \"r\");\n      case \"s\":\n        return replaceLetter(\"e\", \"s\");\n      case \"t\":\n        return replaceLetter(\"e\", \"t\");\n      case \"u\":\n        return replaceLetter(\"e\", \"u\");\n      case \"v\":\n        return replaceLetter(\"e\", \"v\");\n      case \"w\":\n        return replaceLetter(\"e\", \"ww\");\n      case \"x\":\n        return replaceLetter(\"e\", \"xx\");\n      case \"y\":\n        return replaceLetter(\"e\", \"y\");\n      case \"z\":\n        return replaceLetter(\"e\", \"z\");\n      case \"A\":\n        return replaceLetter(\"e\", \"A\");\n      case \"B\":\n        return replaceLetter(\"e\", \"B\");\n      case \"C\":\n        return replaceLetter(\"e\", \"C\");\n      case \"D\":\n        return replaceLetter(\"e\", \"D\");\n      case \"E\":\n        return replaceLetter(\"e\", \"E\");\n      case \"F\":\n        return replaceLetter(\"e\", \"F\");\n      case \"G\":\n        return replaceLetter(\"e\", \"G\");\n      case \"H\":\n        return replaceLetter(\"e\", \"H\");\n      case \"I\":\n        return replaceLetter(\"e\", \"I\");\n      case \"J\":\n        return replaceLetter(\"e\", \"JJ\");\n      case \"K\":\n        return replaceLetter(\"e\", \"K\");\n      case \"L\":\n        return replaceLetter(\"e\", \"L\");\n      case \"M\":\n        return replaceLetter(\"e\", \"M\");\n      case \"N\":\n        return replaceLetter(\"e\", \"N\");\n      case \"O\":\n        return replaceLetter(\"e\", \"O\");\n      case \"P\":\n        return replaceLetter(\"e\", \"P\");\n      case \"Q\":\n        return replaceLetter(\"e\", \"Q\");\n      case \"R\":\n        return replaceLetter(\"e\", \"R\");\n      case \"S\":\n        return replaceLetter(\"e\", \"S\");\n      case \"T\":\n        return replaceLetter(\"e\", \"T\");\n      case \"U\":\n        return replaceLetter(\"e\", \"U\");\n      case \"V\":\n        return replaceLetter(\"e\", \"V\");\n      case \"W\":\n        return replaceLetter(\"e\", \"WW\");\n      case \"X\":\n        return replaceLetter(\"e\", \"XX\");\n      case \"Y\":\n        return replaceLetter(\"e\", \"Y\");\n      case \"Z\":\n        return replaceLetter(\"e\", \"Z\");\n      default:\n        const codeAt = letter.charCodeAt(0);\n        if (codeAt > 255) {\n          return \"xu\" + codeAt.toString(16) + \"x\";\n        } else {\n          return letter;\n        }\n    }\n  }\n  let latin = \"\";\n  let currLang = \"r\";\n  for (let index = 0, length = cyrText.length; index < length; index++) {\n    latin = latin + cyrillicLetterToLatin(cyrText.charAt(index), currLang);\n  }\n  return latin;\n}\n","const map = new Map([\n  [\"а\", \"a\"],\n  [\"б\", \"b\"],\n  [\"в\", \"v\"],\n  [\"г\", \"g\"],\n  [\"д\", \"d\"],\n  [\"е\", \"e\"],\n  [\"є\", \"e\"],\n  [\"ё\", \"e\"],\n  [\"ж\", \"j\"],\n  [\"з\", \"z\"],\n  [\"и\", \"i\"],\n  [\"ї\", \"yi\"],\n  [\"й\", \"i\"],\n  [\"к\", \"k\"],\n  [\"л\", \"l\"],\n  [\"м\", \"m\"],\n  [\"н\", \"n\"],\n  [\"о\", \"o\"],\n  [\"п\", \"p\"],\n  [\"р\", \"r\"],\n  [\"с\", \"s\"],\n  [\"т\", \"t\"],\n  [\"у\", \"u\"],\n  [\"ф\", \"f\"],\n  [\"х\", \"h\"],\n  [\"ц\", \"c\"],\n  [\"ч\", \"ch\"],\n  [\"ш\", \"sh\"],\n  [\"щ\", \"shch\"],\n  [\"ы\", \"y\"],\n  [\"э\", \"e\"],\n  [\"ю\", \"u\"],\n  [\"я\", \"ya\"],\n]);\n\nexport function cyrillicToLatinSimple(cyrillicText) {\n  cyrillicText = cyrillicText.replace(/[ъь]+/g, \"\");\n  return Array.from(cyrillicText).reduce(\n    (latinText, letter) =>\n      latinText +\n      (map.get(letter) ||\n        (map.get(letter.toLowerCase()) === undefined && letter) ||\n        map.get(letter.toLowerCase()).toUpperCase()),\n    \"\",\n  );\n}\n","// Original code:\n// https://программирование-по-русски.рф/яролит.яргт/\n// https://bitbucket.org/budden/ppr/src/master/static/jarolit/яролит.js\n\nexport function latinToCyrillic(s) {\n  const textLength = s.length;\n  let sb = \"\";\n  let index = 0;\n  let currentLanguage = 0; // 0 - cyrillic, 1 - english\n  let i = 0;\n  let cyrillicText = \"\";\n  let theNextLatter = \"\";\n\n  function fillLetter() {\n    if (i >= textLength) {\n      cyrillicText = \"\";\n    } else {\n      cyrillicText = s[i];\n      i++;\n      if (i === textLength) {\n        theNextLatter = \"\";\n      } else {\n        theNextLatter = s[i];\n      }\n    }\n  }\n\n  let writeLetter = function (theLetter) {\n    sb = sb + theLetter;\n    index++;\n  };\n\n  function errorFillingArtefact(message) {\n    let fullMessage = message.toString() + \" in position \" + i;\n    console.log(fullMessage + \"\");\n    writeLetter(\"^\");\n  }\n\n  function theError(message) {\n    errorFillingArtefact(message);\n  }\n\n  function ProchitajjXU() {\n    fillLetter();\n    let unicode = 0;\n    let maxSize = 6;\n    while (true) {\n      if (maxSize < 0) {\n        theError(\"Too long hexadecimal number\");\n        writeLetter(cyrillicText);\n        return;\n      }\n      if (cyrillicText === \"x\") {\n        writeLetter(String.fromCharCode(unicode));\n        break;\n      }\n      unicode = unicode * 16;\n      switch (cyrillicText) {\n        case \"0\":\n          break;\n        case \"1\":\n          unicode += 1;\n          break;\n        case \"2\":\n          unicode += 2;\n          break;\n        case \"3\":\n          unicode += 3;\n          break;\n        case \"4\":\n          unicode += 4;\n          break;\n        case \"5\":\n          unicode += 5;\n          break;\n        case \"6\":\n          unicode += 6;\n          break;\n        case \"7\":\n          unicode += 7;\n          break;\n        case \"8\":\n          unicode += 8;\n          break;\n        case \"9\":\n          unicode += 9;\n          break;\n        case \"A\":\n        case \"a\":\n          unicode += 0xa;\n          break;\n        case \"B\":\n        case \"b\":\n          unicode += 0xb;\n          break;\n        case \"C\":\n        case \"c\":\n          unicode += 0xc;\n          break;\n        case \"D\":\n        case \"d\":\n          unicode += 0xd;\n          break;\n        case \"E\":\n        case \"e\":\n          unicode += 0xe;\n          break;\n        case \"F\":\n        case \"f\":\n          unicode += 0xf;\n          break;\n        default:\n          theError(\"Wrong hexadecimal number\");\n          writeLetter(cyrillicText);\n          return;\n      }\n      fillLetter();\n      maxSize--;\n    }\n  }\n  fillLetter();\n  while (cyrillicText !== \"\") {\n    switch (currentLanguage) {\n      case 0 /*cyrillic*/:\n        switch (theNextLatter) {\n          case \"H\":\n            const cyrillicLetter1 = cyrillicText;\n            fillLetter();\n            let DveH = theNextLatter === \"H\";\n            switch (cyrillicLetter1) {\n              case \"Z\":\n                writeLetter(\"Ж\");\n                break;\n              case \"K\":\n                writeLetter(\"Х\");\n                break;\n              case \"C\":\n                writeLetter(\"Ч\");\n                break;\n              case \"S\":\n                if (DveH) {\n                  writeLetter(\"Щ\");\n                  fillLetter();\n                } else {\n                  writeLetter(\"Ш\");\n                }\n                break;\n              case \"E\":\n                writeLetter(\"Э\");\n                break;\n              default:\n                theError(\"Wrong construction …H\");\n                break;\n            }\n            break;\n          case \"h\":\n            const cyrillicLetter2 = cyrillicText;\n            fillLetter();\n            let Dveh = theNextLatter === \"h\";\n            switch (cyrillicLetter2) {\n              case \"z\":\n                writeLetter(\"ж\");\n                break;\n              case \"k\":\n                writeLetter(\"х\");\n                break;\n              case \"c\":\n                writeLetter(\"ч\");\n                break;\n              case \"s\":\n                if (Dveh) {\n                  writeLetter(\"щ\");\n                  fillLetter();\n                } else {\n                  writeLetter(\"ш\");\n                }\n                break;\n              case \"e\":\n                writeLetter(\"э\");\n                break;\n              default:\n                theError(\"Wrong construction …h\");\n                break;\n            }\n            break;\n          default:\n            switch (cyrillicText) {\n              case \"x\":\n                fillLetter();\n                switch (cyrillicText) {\n                  case \"u\":\n                    ProchitajjXU();\n                    break;\n                  case \"e\":\n                    currentLanguage = 1;\n                    break;\n                  default:\n                    theError(\"Wrong construction x…\");\n                    break;\n                }\n                break;\n              case \"w\":\n              case \"W\":\n                theError(\"W & w are not acceptable\");\n                break;\n              case \"J\": // Префикс\n                fillLetter(); // пропускаем префикс\n                switch (\n                  cyrillicText // ojqua\n                ) {\n                  case \"O\":\n                    writeLetter(\"Ё\");\n                    break;\n                  case \"J\":\n                    writeLetter(\"Й\");\n                    break;\n                  case \"Q\":\n                    writeLetter(\"Ъ\");\n                    break;\n                  case \"U\":\n                    writeLetter(\"Ю\");\n                    break;\n                  case \"A\":\n                    writeLetter(\"Я\");\n                    break;\n                  default:\n                    theError(\"Wrong construction J…\");\n                    break;\n                }\n                break;\n              case \"j\":\n                fillLetter();\n                switch (cyrillicText) {\n                  case \"o\":\n                    writeLetter(\"ё\");\n                    break;\n                  case \"j\":\n                    writeLetter(\"й\");\n                    break;\n                  case \"q\":\n                    writeLetter(\"ъ\");\n                    break;\n                  case \"u\":\n                    writeLetter(\"ю\");\n                    break;\n                  case \"a\":\n                    writeLetter(\"я\");\n                    break;\n                  default:\n                    theError(\"Wrong construction j…\");\n                    break;\n                }\n                break;\n              case \"A\":\n                writeLetter(\"А\");\n                break;\n              case \"a\":\n                writeLetter(\"а\");\n                break;\n              case \"B\":\n                writeLetter(\"Б\");\n                break;\n              case \"b\":\n                writeLetter(\"б\");\n                break;\n              case \"V\":\n                writeLetter(\"В\");\n                break;\n              case \"v\":\n                writeLetter(\"в\");\n                break;\n              case \"G\":\n                writeLetter(\"Г\");\n                break;\n              case \"g\":\n                writeLetter(\"г\");\n                break;\n              case \"D\":\n                writeLetter(\"Д\");\n                break;\n              case \"d\":\n                writeLetter(\"д\");\n                break;\n              case \"E\":\n                writeLetter(\"Е\");\n                break;\n              case \"e\":\n                writeLetter(\"е\");\n                break;\n              case \"Z\":\n                writeLetter(\"З\");\n                break;\n              case \"z\":\n                writeLetter(\"з\");\n                break;\n              case \"I\":\n                writeLetter(\"И\");\n                break;\n              case \"i\":\n                writeLetter(\"и\");\n                break;\n              case \"K\":\n                writeLetter(\"К\");\n                break;\n              case \"k\":\n                writeLetter(\"к\");\n                break;\n              case \"L\":\n                writeLetter(\"Л\");\n                break;\n              case \"l\":\n                writeLetter(\"л\");\n                break;\n              case \"M\":\n                writeLetter(\"М\");\n                break;\n              case \"m\":\n                writeLetter(\"м\");\n                break;\n              case \"N\":\n                writeLetter(\"Н\");\n                break;\n              case \"n\":\n                writeLetter(\"н\");\n                break;\n              case \"O\":\n                writeLetter(\"О\");\n                break;\n              case \"o\":\n                writeLetter(\"о\");\n                break;\n              case \"P\":\n                writeLetter(\"П\");\n                break;\n              case \"p\":\n                writeLetter(\"п\");\n                break;\n              case \"R\":\n                writeLetter(\"Р\");\n                break;\n              case \"r\":\n                writeLetter(\"р\");\n                break;\n              case \"S\":\n                writeLetter(\"С\");\n                break;\n              case \"s\":\n                writeLetter(\"с\");\n                break;\n              case \"T\":\n                writeLetter(\"Т\");\n                break;\n              case \"t\":\n                writeLetter(\"т\");\n                break;\n              case \"U\":\n                writeLetter(\"У\");\n                break;\n              case \"u\":\n                writeLetter(\"у\");\n                break;\n              case \"F\":\n                writeLetter(\"Ф\");\n                break;\n              case \"f\":\n                writeLetter(\"ф\");\n                break;\n              case \"C\":\n                writeLetter(\"Ц\");\n                break;\n              case \"c\":\n                writeLetter(\"ц\");\n                break;\n              case \"Y\":\n                writeLetter(\"Ы\");\n                break;\n              case \"y\":\n                writeLetter(\"ы\");\n                break;\n              case \"Q\":\n                writeLetter(\"Ь\");\n                break;\n              case \"q\":\n                writeLetter(\"ь\");\n                break;\n              case \"H\":\n                theError(\"Wrong single H\");\n                break;\n              case \"h\":\n                theError(\"Wrong single h\");\n                break;\n              default:\n                writeLetter(cyrillicText);\n            }\n        }\n        break;\n      case 1 /*latin*/:\n        switch (cyrillicText) {\n          case \"w\":\n            fillLetter();\n            switch (cyrillicText) {\n              case \"w\":\n                writeLetter(\"w\");\n                break;\n              default:\n                theError(\"Wrong construction w…\");\n                break;\n            }\n            break;\n          case \"W\":\n            fillLetter();\n            switch (cyrillicText) {\n              case \"W\":\n                writeLetter(\"W\");\n                break;\n              default:\n                theError(\"Wrong construction W…\");\n                break;\n            }\n            break;\n          case \"x\":\n            fillLetter();\n            switch (cyrillicText) {\n              case \"x\":\n                writeLetter(\"x\");\n                break;\n              case \"r\":\n                currentLanguage = 0;\n                break;\n              case \"u\":\n                ProchitajjXU();\n                break;\n              default:\n                theError(\"Wrong construction x…\");\n                break;\n            }\n            break;\n          case \"X\":\n            fillLetter();\n            switch (cyrillicText) {\n              case \"X\":\n                writeLetter(\"X\");\n                break;\n              default:\n                theError(\"Wrong construction X…\");\n                break;\n            }\n            break;\n          default:\n            writeLetter(cyrillicText);\n            break;\n        }\n        break;\n      default:\n        theError(\"Wrong alphabet\");\n        break;\n    }\n    fillLetter();\n  }\n  return sb;\n}\n","import { CyrillicToLatinUnsafe } from \"./plain/CyrillicToLatinUnsafe.js\";\nimport { cyrillicToLatin } from \"./jarolit/cyrillicToLatin.js\";\nimport { cyrillicToLatinSimple } from \"./quick/cyrillicToLatin.js\";\nimport { latinToCyrillic } from \"./jarolit/latinToCyrillic.js\";\n\n//---\n\n/**\n * @name cyrillicBelarusianToLatin\n * @alias translitBe\n * @description Convert Cyrillic⟶Latin text using Belarusian flavour\n * @param {string} cyrillicText\n * @returns {string}\n */\nexport function cyrillicBelarusianToLatin(cyrillicText) {\n  return CyrillicToLatinUnsafe({ preset: \"ru\" }).transform(cyrillicText);\n}\n\n/**\n * @name translitBe\n * @alias cyrillicBelarusianToLatin\n * @description Convert Cyrillic⟶Latin text using Belarusian flavour\n * @param {string} cyrillicText\n * @returns {string}\n */\nexport function translitBe(cyrillicText) {\n  return CyrillicToLatinUnsafe({ preset: \"ru\" }).transform(cyrillicText);\n}\n\n//---\n\n/**\n * @name cyrillicRussianToLatin\n * @alias translitRu\n * @description Convert Cyrillic⟶Latin text using Russian flavour\n * @param {string} cyrillicText\n * @returns {string}\n */\nexport function cyrillicRussianToLatin(cyrillicText) {\n  return CyrillicToLatinUnsafe({ preset: \"ru\" }).transform(cyrillicText);\n}\n\n/**\n * @name translitRu\n * @alias cyrillicRussianToLatin\n * @description Convert Cyrillic⟶Latin text using Russian flavour\n * @param {string} cyrillicText\n * @returns {string}\n */\nexport function translitRu(cyrillicText) {\n  return CyrillicToLatinUnsafe({ preset: \"ru\" }).transform(cyrillicText);\n}\n\n//---\n\n/**\n * @name cyrillicToLatinQuick\n * @alias translit\n * @description Convert Cyrillic⟶Latin text using a very simple and quick method\n * @param {string} cyrillicText\n * @returns {string}\n */\nexport function cyrillicToLatinQuick(cyrillicText) {\n  return cyrillicToLatinSimple(cyrillicText);\n}\n\n/**\n * @name translit\n * @alias cyrillicToLatinQuick\n * @description Convert Cyrillic⟶Latin text using a very simple and quick method\n * @param {string} cyrillicText\n * @returns {string}\n */\nexport function translit(cyrillicText) {\n  return cyrillicToLatinSimple(cyrillicText);\n}\n\n//---\n\n/**\n * @name cyrillicToLatinUnicode\n * @alias translitUCS\n * @description Convert Cyrillic⟶Latin text also converting Unicode symbols\n * @param {string} cyrillicText\n * @returns {string}\n */\nexport function cyrillicToLatinUnicode(cyrillicText) {\n  return cyrillicToLatin(cyrillicText);\n}\n\n/**\n * @name translitUCS\n * @alias cyrillicToLatinUnicode\n * @description Convert Cyrillic⟶Latin text also converting Unicode symbols\n * @param {string} cyrillicText\n * @returns {string}\n */\nexport function translitUCS(cyrillicText) {\n  return cyrillicToLatin(cyrillicText);\n}\n\n//---\n\n/**\n * @name cyrillicUkrainianToLatin\n * @alias translitUk\n * @description Convert Cyrillic⟶Latin text using Ukrainian flavour\n * @param {string} cyrillicText\n * @returns {string}\n */\nexport function cyrillicUkrainianToLatin(cyrillicText) {\n  return CyrillicToLatinUnsafe({ preset: \"uk\" }).transform(cyrillicText);\n}\n\n/**\n * @name translitUk\n * @alias cyrillicUkrainianToLatin\n * @description Convert Cyrillic⟶Latin text using Ukrainian flavour\n * @param {string} cyrillicText\n * @returns {string}\n */\nexport function translitUk(cyrillicText) {\n  return CyrillicToLatinUnsafe({ preset: \"uk\" }).transform(cyrillicText);\n}\n\n//---\n\n/**\n * @name latinToCyrillicBelarusian\n * @alias unTranslitBe\n * @description Convert Latin⟶Cyrillic text using Belarusian flavour\n * @param {string} latinText\n * @returns {string}\n */\nexport function latinToCyrillicBelarusian(latinText) {\n  return CyrillicToLatinUnsafe({ preset: \"ru\" }).reverse(latinText);\n}\n\n/**\n * @name unTranslitBe\n * @alias latinToCyrillicBelarusian\n * @description Convert Latin⟶Cyrillic text using Belarusian flavour\n * @param {string} latinText\n * @returns {string}\n */\nexport function unTranslitBe(latinText) {\n  return CyrillicToLatinUnsafe({ preset: \"ru\" }).reverse(latinText);\n}\n\n//---\n\n/**\n * @name latinToCyrillicRussian\n * @alias unTranslitRu\n * @description Convert Latin⟶Cyrillic text using Russian flavour\n * @param {string} latinText\n * @returns {string}\n */\nexport function latinToCyrillicRussian(latinText) {\n  return CyrillicToLatinUnsafe({ preset: \"ru\" }).reverse(latinText);\n}\n\n/**\n * @name unTranslitRu\n * @alias latinToCyrillicRussian\n * @description Convert Latin⟶Cyrillic text using Russian flavour\n * @param {string} latinText\n * @returns {string}\n */\nexport function unTranslitRu(latinText) {\n  return CyrillicToLatinUnsafe({ preset: \"ru\" }).reverse(latinText);\n}\n\n//---\n\n/**\n * @name latinToCyrillicUkrainian\n * @alias unTranslitUk\n * @description Convert Latin⟶Cyrillic text using Ukrainian flavour\n * @param {string} latinText\n * @returns {string}\n */\nexport function latinToCyrillicUkrainian(latinText) {\n  return CyrillicToLatinUnsafe({ preset: \"uk\" }).reverse(latinText);\n}\n\n/**\n * @name unTranslitUk\n * @alias latinToCyrillicUkrainian\n * @description Convert Latin⟶Cyrillic text using Ukrainian flavour\n * @param {string} latinText\n * @returns {string}\n */\nexport function unTranslitUk(latinText) {\n  return CyrillicToLatinUnsafe({ preset: \"uk\" }).reverse(latinText);\n}\n\n//---\n\n/**\n * @name latinToCyrillicUnicode\n * @alias unTranslitUCS\n * @description Convert Latin⟶Cyrillic text also converting Unicode symbols\n * @param {string} latinText\n * @returns {string}\n */\nexport function latinToCyrillicUnicode(latinText) {\n  return latinToCyrillic(latinText);\n}\n\n/**\n * @name unTranslitUCS\n * @alias latinToCyrillicUnicode\n * @description Convert Latin⟶Cyrillic text also converting Unicode symbols\n * @param {string} latinText\n * @returns {string}\n */\nexport function unTranslitUCS(latinText) {\n  return latinToCyrillic(latinText);\n}\n\n//---\n"],"names":["reIsUint","objectProto","Object","prototype","hasOwnProperty","objectToString","toString","propertyIsEnumerable","nativeKeys","overArg","func","transform","arg","keys","arrayLikeKeys","value","inherited","result","isArray","isArguments","isArrayLikeObject","isObjectLike","isArrayLike","call","baseTimes","n","iteratee","index","Array","length","String","skipIndexes","key","isIndex","push","baseFor","createBaseFor","fromRight","object","keysFunc","iterable","props","baseInverter","setter","accumulator","baseForOwn","baseKeys","isPrototype","Ctor","constructor","proto","test","isLength","isFunction","tag","isObject","type","invert","createInverter","toIteratee","constant","identity","CyrillicToLatinUnsafe","config","_preset","preset","_firstLetters","а","б","в","д","з","й","к","л","м","н","о","п","р","с","т","у","ф","ь","_reversedFirstLetters","assign","г","и","ъ","ы","э","_initialDigraphs","е","є","ї","_regularDigraphs","ё","ж","х","ц","ч","ш","щ","ю","я","_firstDigraphs","_reversedFirstDigraphs","_firstAssociations","_nonFirstLetters","_reversedNonFirstLetters","_nonInitialDigraphs","_nonFirstDigraphs","_reversedNonFirstDigraphs","_nonFirstAssociations","input","spaceReplacement","normalizedInput","normalize","newStr","isWordBoundary","i","isUpperCaseOrWhatever","toUpperCase","newLetter","strLowerCase","toLowerCase","slice","reverse","currentIndex","digraph","cyrillicToLatin","cyrText","cyrillicLetterToLatin","letter","currLang","replaceLetter","languageCodeConvertTo","textToTransform","codeAt","charCodeAt","latin","charAt","map","Map","cyrillicToLatinSimple","cyrillicText","replace","from","reduce","latinText","get","undefined","latinToCyrillic","s","textLength","sb","currentLanguage","theNextLatter","fillLetter","writeLetter","theLetter","theError","message","errorFillingArtefact","fullMessage","console","log","ProchitajjXU","unicode","maxSize","fromCharCode","cyrillicLetter1","DveH","cyrillicLetter2","Dveh","cyrillicBelarusianToLatin","cyrillicRussianToLatin","cyrillicToLatinQuick","cyrillicToLatinUnicode","cyrillicUkrainianToLatin","latinToCyrillicBelarusian","latinToCyrillicRussian","latinToCyrillicUkrainian","latinToCyrillicUnicode","translit","translitBe","translitRu","translitUCS","translitUk","unTranslitBe","unTranslitRu","unTranslitUCS","unTranslitUk"],"mappings":"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AAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,UACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,UACvB,WACIA,cAAc,IAAK,UACvB,WACIA,cAAc,IAAK,WACvB,WACIA,cAAc,IAAK,UACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,UACvB,WACIA,cAAc,IAAK,UACvB,WACIA,cAAc,IAAK,UACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,UACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,UACvB,WACIA,cAAc,IAAK,UACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,UACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,UACvB,WACIA,cAAc,IAAK,UACvB,WACIA,cAAc,IAAK,SACvB,WACIA,cAAc,IAAK,mBAEpBG,EAASL,EAAOM,WAAW,UAC7BD,EAAS,IACJ,KAAOA,EAAOrI,SAAS,IAAM,IAE7BgI,OAIXO,EAAQ,OAEP,IAAIlH,EAAQ,EAAGE,EAASuG,EAAQvG,OAAQF,EAAQE,EAAQF,IAC3DkH,GAAgBR,sBAAsBD,EAAQU,OAAOnH,GAFxC,YAIRkH,EC5QT,MAAME,EAAM,IAAIC,IAAI,CAClsBAAsBC,UACpCA,EAAeA,EAAaC,QAAQ,SAAU,IACvCvH,MAAMwH,KAAKF,GAAcG,OAC9B,CAACC,EAAWhB,IACVgB,GACCP,EAAIQ,IAAIjB,SAC4BkB,IAAlCT,EAAIQ,IAAIjB,EAAOR,gBAAgCQ,GAChDS,EAAIQ,IAAIjB,EAAOR,eAAeH,eAClC,ICxCG,SAAS8B,gBAAgBC,SACxBC,EAAaD,EAAE7H,WACjB+H,EAAK,GAELC,EAAkB,EAClBpC,EAAI,EACJyB,EAAe,GACfY,EAAgB,YAEXC,aACHtC,GAAKkC,EACPT,EAAe,IAEfA,EAAeQ,EAAEjC,GACjBA,IAEEqC,EADErC,IAAMkC,EACQ,GAEAD,EAAEjC,QAKpBuC,YAAc,SAAUC,GAC1BL,GAAUK,YAUHC,SAASC,aANTC,qBAAqBD,OACxBE,EAAcF,EAAQ7J,WAAa,gBAAkBmH,EACzD6C,QAAQC,IAAIF,EAAc,IAC1BL,YAAY,KAIZI,CAAqBD,YAGdK,eACPT,iBACIU,EAAU,EACVC,EAAU,SACD,IACPA,EAAU,SACZR,SAAS,oCACTF,YAAYd,MAGO,MAAjBA,EAAsB,CACxBc,YAAYlI,OAAO6I,aAAaF,iBAGlCA,GAAoB,GACZvB,OACD,cAEA,IACHuB,GAAW,YAER,IACHA,GAAW,YAER,IACHA,GAAW,YAER,IACHA,GAAW,YAER,IACHA,GAAW,YAER,IACHA,GAAW,YAER,IACHA,GAAW,YAER,IACHA,GAAW,YAER,IACHA,GAAW,YAER,QACA,IACHA,GAAW,aAER,QACA,IACHA,GAAW,aAER,QACA,IACHA,GAAW,aAER,QACA,IACHA,GAAW,aAER,QACA,IACHA,GAAW,aAER,QACA,IACHA,GAAW,wBAGXP,SAAS,iCACTF,YAAYd,GAGhBa,aACAW,SAGJX,aACwB,KAAjBb,GAAqB,QAClBW,QACD,SACKC,OACD,UACGc,EAAkB1B,EACxBa,iBACIc,EAAyB,MAAlBf,SACHc,OACD,IACHZ,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACCa,GACFb,YAAY,KACZD,cAEAC,YAAY,eAGX,IACHA,YAAY,mBAGZE,SAAS,mCAIV,UACGY,EAAkB5B,EACxBa,iBACIgB,EAAyB,MAAlBjB,SACHgB,OACD,IACHd,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACCe,GACFf,YAAY,KACZD,cAEAC,YAAY,eAGX,IACHA,YAAY,mBAGZE,SAAS,8CAKLhB,OACD,WACHa,aACQb,OACD,IACHsB,yBAEG,IACHX,EAAkB,gBAGlBK,SAAS,mCAIV,QACA,IACHA,SAAS,sCAEN,WACHH,aAEEb,OAEK,IACHc,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,mBAGZE,SAAS,mCAIV,WACHH,aACQb,OACD,IACHc,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,mBAGZE,SAAS,mCAIV,IACHF,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHA,YAAY,eAET,IACHE,SAAS,4BAEN,IACHA,SAAS,gCAGTF,YAAYd,eAIjB,SACKA,OACD,WACHa,aACQb,OACD,IACHc,YAAY,mBAGZE,SAAS,mCAIV,WACHH,aACQb,OACD,IACHc,YAAY,mBAGZE,SAAS,mCAIV,WACHH,aACQb,OACD,IACHc,YAAY,eAET,IACHH,EAAkB,YAEf,IACHW,6BAGAN,SAAS,mCAIV,WACHH,aACQb,OACD,IACHc,YAAY,mBAGZE,SAAS,uCAKbF,YAAYd,iBAKhBgB,SAAS,kBAGbH,oBAEKH,8BC7bF,SAASoB,0BAA0B9B,UACjCpF,sBAAsB,CAAEG,OAAQ,OAAQtD,UAAUuI,6BAuBpD,SAAS+B,uBAAuB/B,UAC9BpF,sBAAsB,CAAEG,OAAQ,OAAQtD,UAAUuI,2BAuBpD,SAASgC,qBAAqBhC,UAC5BD,sBAAsBC,6BAuBxB,SAASiC,uBAAuBjC,UAC9Bf,gBAAgBe,+BAuBlB,SAASkC,yBAAyBlC,UAChCpF,sBAAsB,CAAEG,OAAQ,OAAQtD,UAAUuI,gCAuBpD,SAASmC,0BAA0B/B,UACjCxF,sBAAsB,CAAEG,OAAQ,OAAQ+D,QAAQsB,6BAuBlD,SAASgC,uBAAuBhC,UAC9BxF,sBAAsB,CAAEG,OAAQ,OAAQ+D,QAAQsB,+BAuBlD,SAASiC,yBAAyBjC,UAChCxF,sBAAsB,CAAEG,OAAQ,OAAQ+D,QAAQsB,6BAuBlD,SAASkC,uBAAuBlC,UAC9BG,gBAAgBH,eAtIlB,SAASmC,SAASvC,UAChBD,sBAAsBC,iBAjDxB,SAASwC,WAAWxC,UAClBpF,sBAAsB,CAAEG,OAAQ,OAAQtD,UAAUuI,iBAuBpD,SAASyC,WAAWzC,UAClBpF,sBAAsB,CAAEG,OAAQ,OAAQtD,UAAUuI,kBA+CpD,SAAS0C,YAAY1C,UACnBf,gBAAgBe,iBAuBlB,SAAS2C,WAAW3C,UAClBpF,sBAAsB,CAAEG,OAAQ,OAAQtD,UAAUuI,mBAuBpD,SAAS4C,aAAaxC,UACpBxF,sBAAsB,CAAEG,OAAQ,OAAQ+D,QAAQsB,mBAuBlD,SAASyC,aAAazC,UACpBxF,sBAAsB,CAAEG,OAAQ,OAAQ+D,QAAQsB,oBA+ClD,SAAS0C,cAAc1C,UACrBG,gBAAgBH,mBAzBlB,SAAS2C,aAAa3C,UACpBxF,sBAAsB,CAAEG,OAAQ,OAAQ+D,QAAQsB"}